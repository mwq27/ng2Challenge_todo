{"version":3,"sources":["test_bed.js"],"names":[],"mappings":"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","file":"src/test_lib/test_bed.js","sourceRoot":"/Users/mwoodson/Projects/ng2-express-starter/node_modules/angular2/es6/prod/","sourcesContent":["import {Injector,\n  bind} from 'angular2/di';\nimport {Type,\n  isPresent,\n  BaseException} from 'angular2/src/facade/lang';\nimport {Promise} from 'angular2/src/facade/async';\nimport {isBlank} from 'angular2/src/facade/lang';\nimport {List} from 'angular2/src/facade/collection';\nimport {View} from 'angular2/src/core/annotations/view';\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\nimport {AppView} from 'angular2/src/core/compiler/view';\nimport {DynamicComponentLoader,\n  ComponentRef} from 'angular2/src/core/compiler/dynamic_component_loader';\nimport {queryView,\n  viewRootNodes,\n  el} from './utils';\nimport {instantiateType,\n  getTypeOf} from './lang_utils';\nexport class TestBed {\n  constructor(injector) {\n    this._injector = injector;\n  }\n  overrideView(component, template) {\n    this._injector.get(TemplateResolver).setView(component, template);\n  }\n  setInlineTemplate(component, html) {\n    this._injector.get(TemplateResolver).setInlineTemplate(component, html);\n  }\n  overrideDirective(component, from, to) {\n    this._injector.get(TemplateResolver).overrideTemplateDirective(component, from, to);\n  }\n  createView(component, {context = null,\n    html = null} = {}) {\n    if (isBlank(component) && isBlank(context)) {\n      throw new BaseException('You must specified at least a component or a context');\n    }\n    if (isBlank(component)) {\n      component = getTypeOf(context);\n    } else if (isBlank(context)) {\n      context = instantiateType(component);\n    }\n    if (isPresent(html)) {\n      this.setInlineTemplate(component, html);\n    }\n    var rootEl = el('<div></div>');\n    var componentBinding = bind(component).toValue(context);\n    return this._injector.get(DynamicComponentLoader).loadIntoNewLocation(componentBinding, null, rootEl, this._injector).then((hostComponentRef) => {\n      return new ViewProxy(hostComponentRef);\n    });\n  }\n}\nObject.defineProperty(TestBed, \"parameters\", {get: function() {\n    return [[Injector]];\n  }});\nObject.defineProperty(TestBed.prototype.overrideView, \"parameters\", {get: function() {\n    return [[Type], [View]];\n  }});\nObject.defineProperty(TestBed.prototype.setInlineTemplate, \"parameters\", {get: function() {\n    return [[Type], [assert.type.string]];\n  }});\nObject.defineProperty(TestBed.prototype.overrideDirective, \"parameters\", {get: function() {\n    return [[Type], [Type], [Type]];\n  }});\nObject.defineProperty(TestBed.prototype.createView, \"parameters\", {get: function() {\n    return [[Type], []];\n  }});\nexport class ViewProxy {\n  constructor(componentRef) {\n    this._componentRef = componentRef;\n    this._view = componentRef.hostView.componentChildViews[0];\n  }\n  get context() {\n    return this._view.context;\n  }\n  get rootNodes() {\n    return viewRootNodes(this._view);\n  }\n  detectChanges() {\n    this._view.changeDetector.detectChanges();\n  }\n  querySelector(selector) {\n    return queryView(this._view, selector);\n  }\n  destroy() {\n    this._componentRef.dispose();\n  }\n  get rawView() {\n    return this._view;\n  }\n}\nObject.defineProperty(ViewProxy, \"parameters\", {get: function() {\n    return [[ComponentRef]];\n  }});\n//# sourceMappingURL=test_bed.js.map\n\n//# sourceMappingURL=./test_bed.map"]}