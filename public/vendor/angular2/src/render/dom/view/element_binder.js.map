{"version":3,"sources":["element_binder.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,8IAAoB,UAAS,SAAQ;;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG;AAAZ,cAAoB,KAAG,QAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,UAAoB,KAAG,IAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,eAAoB,KAAG,SAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,sBAAoB,KAAG,CAAC;IAEhB,CADuB;AACzB,UAAM;AAFZ,sBAAA,SAAQ,AAAC;AAOF,eAAM,cAAY,CACX,AASU;8DAAD,GAAC;AATT,4BAAc;AACzB,+BAAiB;AACjB,4BAAc;AACd,wBAAU;AACV,wBAAU;AACV,wBAAU;AACV,yBAAW;AACX,wBAAU;AACV,6BAAe;AACf,4BAAc;AACd,aAAG,gBAAgB,EAAI,gBAAc,CAAC;AACtC,aAAG,mBAAmB,EAAI,mBAAiB,CAAC;AAC5C,aAAG,gBAAgB,EAAI,gBAAc,CAAC;AACtC,aAAG,YAAY,EAAI,YAAU,CAAC;AAC9B,aAAG,YAAY,EAAI,YAAU,CAAC;AAC9B,aAAG,YAAY,EAAI,YAAU,CAAC;AAC9B,aAAG,aAAa,EAAI,aAAW,CAAC;AAChC,aAAG,YAAY,EAAI,YAAU,CAAC;AAC9B,aAAG,iBAAiB,EAAI,iBAAe,CAAC;AACxC,aAAG,gBAAgB,EAAI,gBAAc,CAAC;QAQ1C;AAjCU,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AA2B5C,2BAAiB,CAAjB,UAAkB,AAAC,CAAE;AACnB,iBAAO,CAAA,SAAQ,AAAC,CAAC,IAAG,YAAY,CAAC,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,IAAG,gBAAgB,CAAC,CAAC;UACvE;AACA,4BAAkB,CAAlB,UAAmB,AAAC,CAAE;AACpB,iBAAO,CAAA,SAAQ,AAAC,CAAC,IAAG,YAAY,CAAC,CAAA,EAAK,CAAA,OAAM,AAAC,CAAC,IAAG,gBAAgB,CAAC,CAAC;UACrE;AAAA,aA/B8D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,gCAAqC,CAAA;AAA9C,cAAA,SAAQ,AAAC,CAAE;AAoCJ,eAAM,MAAI,CACH,IAAG,CAAG,CAAA,MAAK,CAAG,CAAA,QAAO,CAAG;AAClC,aAAG,KAAK,EAAI,KAAG,CAAC;AAChB,aAAG,OAAO,EAAI,OAAK,CAAC;AACpB,aAAG,SAAS,EAAI,SAAO,CAAC;QAC1B;AAvCQ,AAwCV,aAxCiB,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,eACkB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,cAAQ,AAAC,gBAAqC,CAAA;AA2C9C,WAAK,eAAe,AAAC,CAAC,KAAI,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAQ,AAAC,CAAE;AACxD,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IA3C0B;EAC3B,CAAA;AADI,CAAC,CAAC;AA8C8B","file":"src/render/dom/view/element_binder.js","sourceRoot":"/Users/mwoodson/Projects/ng2-express-starter/node_modules/angular2/es6/prod/","sourcesContent":["import {isBlank,\n  isPresent} from 'angular2/src/facade/lang';\nimport {AST} from 'angular2/change_detection';\nimport {SetterFn} from 'angular2/src/reflection/types';\nimport {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport * as protoViewModule from './proto_view';\nexport class ElementBinder {\n  constructor({textNodeIndices,\n    contentTagSelector,\n    nestedProtoView,\n    componentId,\n    eventLocals,\n    localEvents,\n    globalEvents,\n    parentIndex,\n    distanceToParent,\n    propertySetters} = {}) {\n    this.textNodeIndices = textNodeIndices;\n    this.contentTagSelector = contentTagSelector;\n    this.nestedProtoView = nestedProtoView;\n    this.componentId = componentId;\n    this.eventLocals = eventLocals;\n    this.localEvents = localEvents;\n    this.globalEvents = globalEvents;\n    this.parentIndex = parentIndex;\n    this.distanceToParent = distanceToParent;\n    this.propertySetters = propertySetters;\n  }\n  hasStaticComponent() {\n    return isPresent(this.componentId) && isPresent(this.nestedProtoView);\n  }\n  hasDynamicComponent() {\n    return isPresent(this.componentId) && isBlank(this.nestedProtoView);\n  }\n}\nexport class Event {\n  constructor(name, target, fullName) {\n    this.name = name;\n    this.target = target;\n    this.fullName = fullName;\n  }\n}\nObject.defineProperty(Event, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string], [assert.type.string]];\n  }});\n//# sourceMappingURL=element_binder.js.map\n\n//# sourceMappingURL=./element_binder.map"]}